---
AWSTemplateFormatVersion: "2010-09-09"
Description: EC2 test for latest AWS Linux 2 EC2 deployment

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "EC2 Configuration"
        Parameters:
          - pTagNameValue
          - pOperatingSystem
          - pInstanceType
          - pRole
          - pVolumeSize
          - pEbsDeleteOnTermination
      - Label:
          default: "Network Configuration"
        Parameters:
          - pVpc
          - pSubnet
      - Label:
          default: "Optional Configuration"
        Parameters:
          - pBootstrapUrl
    ParameterLabels:
      pRole:
        default: "EC2 Instance Profile"
      pOperatingSystem:
        default: "Operating System"
      pInstanceType:
        default: "Instance Type"
      pTagNameValue:
        default: "EC2 Name"
      pVolumeSize:
        default: "Volume Size"
      pEbsDeleteOnTermination:
        default: "Delete EBS Volume on Termination"
      pSubnet:
        default: "Subnet"
      pVpc:
        default: "VPC"
      pBootstrapUrl:
        default: "Bootstrap URL"

Parameters:
  pBootstrapUrl:
    Type: String
    Description: URL to download and execute a bash script. This field is not required.
  pSubnet:
    Description: The subnet to launch the instance in to. It must be part of the VPC chosen above.
    Type: AWS::EC2::Subnet::Id
  pVpc:
    Description: The VPC to launch the EC2 instance in to.
    Type: AWS::EC2::VPC::Id
  pOperatingSystem:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-ebs"
  pInstanceType:
    Description: Desired Instance Size
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.large
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - x1e.32xlarge
      - x1.32xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
  pTagNameValue:
    Description: "Required: Enter the tag name you'd like applied to the instance. Tag Name gives the name to the EC2 instance."
    Type: String
    MinLength: 1
  pVolumeSize:
    Description:
      Enter the number of GBs you want your volume to be. The minimum value
      is 8 GBs
    Type: Number
    Default: 100
    MinValue: 8
  pEbsDeleteOnTermination:
    Description: "Specify if the EBS volume should be deleted if EC2 is deleted."
    Type: String
    Default: true
    AllowedValues:
      - true
      - false

Rules:
  SubnetInVPC:
    Assertions:
      - Assert: !EachMemberIn
          - !ValueOfAll
            - AWS::EC2::Subnet::Id
            - VpcId
          - !RefAll "AWS::EC2::VPC::Id"
        AssertDescription: All subnets must in the VPC

Conditions:
  cUseBootstrapUrl: !Not [!Equals ["", !Ref pBootstrapUrl]]

Resources:
  rSecurityGroupDefault:
    Type: AWS::EC2::SecurityGroup
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W5
            reason: This default security group is purposely open to the world for egress for ease of adoption.
          - id: W29
            reason: This default security group is purposely open on all ports for egress for ease of adoption.
    Properties:
      GroupDescription: !Sub "Default SG for SC Product ${pTagNameValue} "
      VpcId: !Ref pVpc
      SecurityGroupEgress:
        - Description: Outbound unrestricted traffic
          IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Ref pTagNameValue

  rLinuxEc2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref pOperatingSystem
      InstanceType: !Ref pInstanceType
      Monitoring: true
      IamInstanceProfile: !Ref rec2InstanceProfile
      SourceDestCheck: true
      SubnetId: !Ref pSubnet
      SecurityGroupIds:
        - !Ref rSecurityGroupDefault
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeSize: !Ref pVolumeSize
            DeleteOnTermination: !Ref pEbsDeleteOnTermination
      Tags:
        - Key: Name
          Value: !Ref pTagNameValue
          Metadata:
      Comment: Install configure CWLogs
      AWS::CloudFormation::Init:
        config:
          files:
            # Build our CWLogs Agent Configuration File, used in cloud init UserData below
            # see https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AgentReference.html
            "/etc/awslogs/awslogs.conf":
              content: !Sub |
                # writen by aws clodformation stack ${AWS::StackId}
                [general]
                state_file = /var/awslogs/agent-state
                # SSM Agent Logs
                # https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-agent-logs.html
                [/var/log/amazon/ssm/amazon-ssm-agent.log]
                file = /var/log/amazon/ssm/amazon-ssm-agent.log
                log_group_name = ${Ec2InstanceSsmAgentLogGroup}
                log_stream_name = {instance_id}/ssm-agent.log
                datetime_format = %Y-%m-%d %H:%M:%S
                [/var/log/amazon/ssm/errors.log]
                file = /var/log/amazon/ssm/errors.log
                log_group_name = ${Ec2InstanceSsmErrorLogGroup}
                log_stream_name = {instance_id}/ssm-error.log
                datetime_format = %Y-%m-%d %H:%M:%S
            # The log group will be created in region specified in /etc/awslogs/awscli.conf
            # write this temp file we will move into place in cloud init script below
            "/etc/awslogs/awscli.replace.conf":
              content: !Sub |
                # writen by aws clodformation stack ${AWS::StackId}
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          # Get the latest CloudFormation package
          yum update -y aws-cfn-bootstrap
          # Start cfn-init
          /opt/aws/bin/cfn-init -s ${AWS::StackId} -r Ec2Instance --region ${AWS::Region} || error_exit 'Failed to run cfn-init'
          # make the needed dir for the cwlogs state_file
          mkdir /var/awslogs
          # Get the CloudWatch Logs agent
          yum install -y awslogs
          # overwrite awscli.conf with our copy
          mv /etc/awslogs/awscli.replace.conf /etc/awslogs/awscli.conf
          # Install the CloudWatch Logs agent (works with AWS Linux[1] or 2)
          if command -v systemctl >/dev/null; then systemctl start awslogsd; else service awslogs start; fi
          # Enable start on reboot (works with AWS Linux[1] or 2)
          if command -v systemctl >/dev/null; then systemctl enable awslogsd.service; else chkconfig awslogs on; fi
          # change the login shell for ssm-user, although amazon-ssm-agent still forces /bin/sh
          # https://github.com/aws/amazon-ssm-agent/issues/131
          usermod --shell /bin/bash ssm-user
          # All done so signal success
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource Ec2Instance --region ${AWS::Region}

  ## Instance Profiles
  ## EC2 IAM Roles
  rEc2Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName:  !Sub "ec2-role-${AWS::StackName}"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
      - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore'
      - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy'
      - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess'

  rec2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub "ec2-profile-${AWS::StackName}"
      Path: /
      Roles:
        - !Ref rEc2Role
        
  Ec2InstanceSsmAgentLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      
  Ec2InstanceSsmErrorLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7

Outputs:
  oLinuxEc2InstanceId:
    Description: Resource ID of the newly created EC2 instance
    Value: !Ref rLinuxEc2

  oLinuxEc2PrivateIP:
    Description: Private IP Address for EC2
    Value: !GetAtt rLinuxEc2.PrivateIp
